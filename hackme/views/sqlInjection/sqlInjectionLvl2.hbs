 {{#if validAnswer}}
<script>
    window.onload = function () {
        swal({
            title: "Bonne réponse!",
            text: "Vous pouvez passer au prochain niveau.",
            icon: "success"
        })
    };
</script> {{else if invalidAnswer}}
<script>
    window.onload = function () {
        swal({
            title: "Mauvaise réponse...",
            text: "Meilleure chance la prochaine fois.",
            icon: "error"
        })
    };
</script> {{/if}} {{#if successLogin}}
<script>
    window.onload = function () {
        swal({
            title: "Authentification réussie",
            text: "Authentifié en tant qu'usager: {{username}}.",
            icon: "success"
        })
    };
</script> {{else if invalidLogin}}
<script>
    window.onload = function () {
        swal({
            title: "Authentification refusée",
            text: "Mauvaise combinaison de nom d'utilisateur / mot de passe.",
            icon: "warning"
        })
    };
</script> {{else if failedLogin}}
<script>
    window.onload = function () {
        swal({
            title: "Erreur inconnue",
            text: "L'application a rencontré une erreur inattendue.",
            icon: "error",
            html: true
        })
    };
</script> {{/if}}


<div class="container-fluid">
    <div class="mx-auto text-center">
        <h1 class="display-4">Injection SQL Niveau 2
            <br/>Collecte d'information par injection SQL Blind Based</h1>
        <p>Plus d'information
            <a href="https://fr.wikipedia.org/wiki/Injection_SQL">https://fr.wikipedia.org/wiki/Injection_SQL</a>
        </p>
        <p class="lead">Le but de cet exercice est d'obtenir le nom de la première table de la base de données.</p>
    </div>
    <div class="marginLeft">
        <p class="text-justify">
            Suite à des attaques par SQL injection, les développeurs de l'application ont caché les messages d'erreur détaillés pour
            qu'ils ne puissent plus être exploités par des utilisateurs mal intentionnés.

        </p>
        <p class="text-justify">
            <b>Indice:</b> Vous ne pensez pas que des mesures de sécurité autres que des messages d'erreur génériques ont été
            mises en place. Vous pensez donc que surveiller le comportement de l'application fasse à différentes requêtes
            pourrait vous révéler de l'information intéressante...

        </p>

        <form name="login" action="/sqlInjection/lvl2/Login" method="post">
            <div class="form-group">
                <label for="uname">
                    <b>Nom d'utilisateur</b>
                </label>
                <input type="text" placeholder="Entrez votre nom d'utilisateur" name="username" required class="form-control">
            </div>
            <div class="form-group">
                <label for="psw">
                    <b>Mot de passe</b>
                </label>
                <input type="password" placeholder="Entrez votre mot de passe" name="password" required class="form-control">
            </div>
            <button type="submit" class="btn btn-primary">Connexion</button>
        </form>
        <br/>
        <br/>
        <p class="">
            <b>Réponse:</b> Inscrivez ici le nom de la table que vous avez trouvez par injection SQL Blind Based.

        </p>

        <form name="answer" action="/sqlInjection/lvl2/Answer" method="post">
            <div class="form-group">
                <label for="tablename">
                    <b>Nom de la table</b>
                </label>
                <input type="text" placeholder="Entrez le nom de la table" name="tablename" required class="form-control">
            </div>
            <button type="submit" class="btn btn-primary">Soumettre</button>
        </form>
    </div>
</div>
</div>